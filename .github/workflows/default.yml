name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

permissions:
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/acg/ubuntu1404-fsq-run:latest
      credentials:
        username: acg
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Run Tests
        run: make check

      - name: Report Status to Slack
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.CHECKS_SLACK_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
          PR_NUMBER: ${{ github.event.number }}
          COMMIT_SHA: ${{ github.event.after }}
        shell: bash
        run: |
          case "$STATUS" in
            success)   COLOR="#41aa58" ; VERB="Passed" ;;
            failure)   COLOR="#ff0000" ; VERB="Failed" ;;
            cancelled) COLOR="#ff5800" ; VERB="Cancelled" ;;
          esac
          STARTED=$(curl -s -u $GITHUB_ACTOR:$GITHUB_TOKEN -H "Accept: application/vnd.github.v3+json" $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/jobs | grep '^      "started_at":' | cut -f4 -d'"')
          ELAPSED=$(( `date +%s` - `date -d "$STARTED" +%s` ))
          test -z "$SLACK_WEBHOOK" || curl -f -d @- -H "Content-Type: application/json" "$SLACK_WEBHOOK" <<EOSLACKJSON
          {
            "attachments": [{
              "text": "$VERB check <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/pull/$PR_NUMBER/checks?sha=$COMMIT_SHA|#$GITHUB_RUN_NUMBER> for <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/${COMMIT_SHA}|\`${COMMIT_SHA:0:8}\`> in <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY|$GITHUB_REPOSITORY> (<$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/tree/$GITHUB_HEAD_REF|*\`$GITHUB_HEAD_REF\`*>) *by $GITHUB_ACTOR*\n_Elapsed: ${ELAPSED}s_",
              "color": "$COLOR"
            }]
          }
          EOSLACKJSON
