name: CI

on:
  pull_request:

permissions:
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/acg/ubuntu1404-fsq-run:latest
      credentials:
        username: acg
        password: ${{ secrets.DOCKER_CONTAINER_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests
        run: make check

  slack-notify-pull-request:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Report Status to Slack
        env:
          SLACK_WEBHOOK: ${{ secrets.CHECKS_SLACK_WEBHOOK_URL }}
          STATUS: ${{ job.status }}
          PR_NUMBER: ${{ github.event.number }}
          COMMIT_SHA: ${{ github.event.after }}
        shell: bash
        run: |
          case "$STATUS" in
            success)   COLOR="#41aa58" ; VERB="Passed" ;;
            failure)   COLOR="#ff0000" ; VERB="Failed" ;;
            cancelled) COLOR="#ff5800" ; VERB="Cancelled" ;;
          esac
          STARTED=$(
            curl -s \
              -u $GITHUB_ACTOR:$GITHUB_TOKEN \
              -H "Accept: application/vnd.github.v3+json" \
              $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/jobs |
            grep '^      "started_at":' |
            cut -f4 -d'"'
          )
          ELAPSED=$(( `date +%s` - `date -d "$STARTED" +%s` ))
          GITHUB_REPO_URL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY"
          LINE1=$( printf "%s check <%s|#%s> for <%s|\`%s\`> in <%s|%s> (<%s|*\`%s\`*>) *by %s*" \
            "$VERB" \
            "$GITHUB_REPO_URL/pull/$PR_NUMBER/checks?sha=$COMMIT_SHA" \
            "$GITHUB_RUN_NUMBER" \
            "$GITHUB_REPO_URL/commit/${COMMIT_SHA}" \
            "${COMMIT_SHA:0:8}" \
            "$GITHUB_REPO_URL" \
            "$GITHUB_REPOSITORY" \
            "$GITHUB_REPO_URL/tree/$GITHUB_HEAD_REF" \
            "$GITHUB_HEAD_REF" \
            "$GITHUB_ACTOR"
          )
          LINE2="_Elapsed: ${ELAPSED}s_"
          test -z "$SLACK_WEBHOOK" || curl -f -d @- -H "Content-Type: application/json" "$SLACK_WEBHOOK" <<EOSLACKJSON
          {
            "attachments": [{
              "text": "$LINE1\n$LINE2",
              "color": "$COLOR"
            }]
          }
          EOSLACKJSON
